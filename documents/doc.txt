Инструкция и команды для разворачивания проекта.

1.  Ставим композер в проект 4 команды
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"

2. ставим  Laravel  с указанием версии
php composer.phar create-project --prefer-dist laravel/laravel=5.7.0
  последняя версия
php composer.phar create-project --prefer-dist laravel/laravel blog

3. Установим "базовые" пакеты: laravel-ide-helper, laravel-debugbar;

php composer.phar require --dev barryvdh/laravel-ide-helper

php composer.phar  require barryvdh/laravel-debugbar --dev

php composer.phar require laravel/helpers

4. Подключаем БД и создаем модели + миграции
php artisan make:model Models/BlogCategory -m

5.  Заполняем миграции создаем структуру таблиц
6. Выполняем миграции
php artisan migrate
 7. Создаем сиды
php artisan make:seeder UsersTableSeeder
php artisan make:seeder BlogCategoriesTableSeeder

8. Редактируем в DataBaseSeeder  метод run  дабывляем команды для новых сидов
9.  готовим сидеры, добавляем в них масивы с данными
10. Добавляем factory
php artisan make:factory BlogPostFactory
11. Редактируем BlogPostFactory
12.  Делаем посев
php artisan db:seed
для отдельной таблицы
php artisan db:seed --class-BlogPostFactory
 или если были изменения рефреш
 php artisan migrate:refresh --seed
 если нужно ещё накатить тестовые данные, то юзаем ключ --seed:
 `php artisan migrate:fresh --seed` - удаляет все таблицы, накатывает миграции и заполняет тестовыми данными.


